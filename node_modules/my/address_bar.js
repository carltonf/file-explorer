var events = require("events");
var path = require('path');
var jade = require('jade');
var util = require("util");

// Template engine
var gen_bar = jade.compile([
    'button.btn.btn-default',
    '    span.glyphicon.glyphicon-folder-open',
    '- each item, i in sequence',
    '    button.path-part.btn.btn-default(type="button", data-path="#{item.path}") #{item.name}',

    /* &#x25B8: BLACK RIGHT-POINTING SMALL TRIANGLE
       Ref: http://en.wikipedia.org/wiki/Geometric_Shapes
    */
    '    div.btn-group(role="group")',
    '        button.path-part-dropdown.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown") &#x25B8',
    '        ul.dropdown-menu(role="menu")',
    '            li',
    '                a(href="#") Child 1',
    '                a(href="#") Child 2',

].join('\n'));

var gen_one_fie = jade.compile([
    'li(data-path="#{item.path}")',
    '  a(href="#") #{item.name}',
].join('\n'));

// Our real type
function AddressBar(element) {
  events.EventEmitter.call(this);
  this.element = element;       // #addressbar

  // Monitor click on AddressBar
  var self = this;
  element.delegate('.path-part', 'click', function() {
    self.element.children('.active').removeClass('active');
    $(this).addClass('active');

    self.emit('navigate', $(this).attr('data-path'));
    // don't return false, as this click event needs to pass on to the bootstrap
    // button group to have dropdown menu show/hide properly
  });
}

util.inherits(AddressBar, events.EventEmitter);

AddressBar.prototype.set = function(dir_path) {
  this.current_path = path.normalize(dir_path);
  // Split path into separate elements
  var sequence = this.current_path.split(path.sep);
  var result = [];

  var i = 0;
  for (; i < sequence.length; ++i) {
    result.push({
      name: sequence[i],
      path: sequence.slice(0, 1 + i).join(path.sep),
    });
  }

  // Add root for *nix
  if (sequence[0] == '' && process.platform != 'win32') {
    result[0] = {
      name: 'root',
      path: '/',
    };
  }

  this.element.html(gen_bar({ sequence: result }));
}

// TODO the following function may be removed
AddressBar.prototype.enter = function(dir) {
  // Where is current
  var how_many = this.element.children().length;
  var where = this.element.children('.active').index();
  if (where == how_many - 1) {
    // Add '/' on tail
    this.element.children().eq(-1).append('<span class="divider">/</span>');
  } else {
    this.element.children('li:gt(' + where + ')').remove();
  }

  // Add new folder
  this.element.append(gen_one_fie({
    item: { path: dir, name: path.basename(dir) },
  }));
  this.element.find('a:last').trigger('click');
}

exports.AddressBar = AddressBar;
